# More documentation here: https://serverless.com/framework/docs/providers/aws/guide/serverless.yml/
service: helloWorld

provider:
  name: aws
  stage: dev
  region: eu-central-1
  stackName: ${sls:stage}-${self:service}
  deploymentBucket:
    name: ${sls:stage}-${file(../../services/infrastructure/deploymentBucket/config.yml):bucketName, file(../../services/infrastructure/deploymentBucket/serverless.yml):defaultBucketName}
  runtime: python3.9
  memorySize: 1024 # MB
  timeout: 6 # seconds
  tags: # Tags that will be added to each of the deployment resources.
    project: dataplattform # When used for sub-projects like eventBox change project tag to eventBox
    #layer: ingestion # ingestion, processing, restApi, infrastructure
    #ingestion: webHooks, pollers, iot
    #processing: linkedIn
    #restApi: linkedIn
    #infrastructure: s3
    # key: value
  stackTags: # Tags for cloud formation
    # key: value
  environment: # Service wide environment variables
    #ENVIRONMENT_VARIABLE_NAME: 123456789

package:
  individually: true
  exclude:
    - "./**" # Exclude everything and include what you need in the functions below

functions:
  helloWorld:
    handler: function_1.handler # fileName.functionNameInFile
    name: ${sls:stage}-HelloWorld # Always begin name with stage
    description: Hello world lambda <3
    package:
      include:
        - '*.py' # Files to include in deployment
    environment: # Environment variables, often stored in SSM
      #ENVIRONMENT_VARIABLE_NAME: ${ssm:ssm_key}
    tags: # Tag for this function. Every function are tagged with stage by default
    events: # How to trigger the lambda
      # Check link at line 1 for examples

resources: # The resources your functions use
  Resources:
  Outputs: # The outputs that your AWS CloudFormation Stack should produce. This allows references between services.

plugins:
  - serverless-python-requirements # Installs python requirements from requirements.txt file in module foldervl
