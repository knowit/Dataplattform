service: cloudfront-public-raw-storage

custom:
  stage: ${opt:stage, self:provider.stage}
  bucketName: ${self:custom.stage}-public-raw-storage-bucket
  domainName: ${self:custom.bucketName}.s3.amazonaws.com
  domainId: custom/${self:custom.domainName}
  service: ${self:custom.stage}-${self:service}
  cloudFrontOrigin:
    DomainName: ${self:custom.domainName}
    Id: ${self:custom.domainId}
    CustomOriginConfig:
      HTTPSPort: 443
      OriginProtocolPolicy: https-only

provider:
  name: aws
  stage: dev
  region: us-east-1
  runtime: python3.7
  stackName: ${self:custom.service}

resources:
  Resources:
    PublicRawStorageBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucketName}
        AccessControl: PublicRead
    PublicRawStorageBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: PublicRawStorageBucket
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: '*'
              Action:
                - s3:GetObject
              Resource: arn:aws:s3:::${self:custom.bucketName}/*
    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Aliases:
            - ${self:custom.stage}-storage.dataplattform.knowit.no
          Origins: 
            - ${self:custom.cloudFrontOrigin}
          DefaultCacheBehavior:
            CachePolicyId: b2884449-e4de-46a7-ac36-70bc7f1ddd6d 
            # Name: Managed-CachingOptimizedForUncompressedObjects
            # https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html#attaching-managed-cache-policies
            AllowedMethods:
              - HEAD
              - GET
            TargetOriginId:  ${self:custom.domainId}
            ViewerProtocolPolicy: https-only
          Enabled: true
          ViewerCertificate:
            AcmCertificateArn: 
              Fn::Join: 
                - ':'
                - - 'arn:aws:acm:us-east-1'
                  - !Ref 'AWS::AccountId'
                  - certificate/fa79680b-dab9-4245-aaf0-a5ffeb15b5e9
            MinimumProtocolVersion: TLSv1.2_2019
            SslSupportMethod: sni-only
  Outputs:
    PublicRawStorageBucketName:
      Value:
        'Ref': PublicRawStorageBucket
    CloudFrontDistributionOutput:
      Value:
        'Fn::GetAtt': [CloudFrontDistribution, DomainName]