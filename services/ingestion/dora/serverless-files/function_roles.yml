Resources:
  IngestLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ${sls:stage}-${self:service}-ingest-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: ${sls:stage}-EncryptedBucketIO-${self:service}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:ListObjects*
                  - s3:GetObject
                  - s3:CopyObject
                  - s3:DeleteObjects
                  - s3:DeleteObjectVersion
                Resource:
                  - !Sub arn:aws:s3:::${sls:stage}-kmsbucket-${AWS::AccountId}
                  - !Sub arn:aws:s3:::${sls:stage}-kmsbucket-${AWS::AccountId}/*
        - PolicyName: ${sls:stage}-EncryptedBucketKMS-${self:service}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - kms:Encrypt
                  - kms:Decrypt
                  - kms:DescribeKey
                  - kms:ListKeys
                  - kms:GenerateDataKey
                Resource:
                  Fn::Join:
                    - ""
                    - - !Sub arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/
                      - !Sub "${ssm:/${sls:stage}/kms/key-id}"
        - PolicyName: ${sls:stage}-EncryptedBucketIO-${self:service}-List
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:ListBucketVersions
                  - s3:GetBucketLocation
                Resource:
                  - !Sub arn:aws:s3:::${sls:stage}-kmsbucket-${AWS::AccountId}
                  - !Sub arn:aws:s3:::${sls:stage}-kmsbucket-${AWS::AccountId}/*
        - PolicyName: ${sls:stage}-${self:service}-ingest-sqsRole
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - sqs:GetQueueUrl
                  - sqs:SendMessageBatch
                  - sqs:SendMessage
                Resource: !GetAtt EventQueue.Arn
        - PolicyName: ${sls:stage}-ParameterStore-${self:service}
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'ssm:GetParameter*'
                Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${sls:stage}/${self:service}/*
  QuicksightUserGroupRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ${sls:stage}-${self:service}-quicksight-usergroup-lambda-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: ${sls:stage}-Glue-${self:service}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - 'glue:GetPartitions'
                  - 'glue:GetTable'
                  - 'glue:GetDatabase'
                Resource:
                  - !Sub arn:aws:glue:${AWS::Region}:${AWS::AccountId}:catalog
                  - !Sub arn:aws:glue:${AWS::Region}:${AWS::AccountId}:database/${sls:stage}_${self:custom.editable.databaseName}_database
                  - !Sub arn:aws:glue:${AWS::Region}:${AWS::AccountId}:table/${sls:stage}_${self:custom.editable.databaseName}_database/*
        - PolicyName: ${sls:stage}-Quicksight-${self:service}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - 'quicksight:ListGroups'
                  - 'quicksight:CreateGroup'
                  - 'quicksight:HeadObject'
                Resource:
                  - "*"
        - PolicyName: ${sls:stage}-EncryptedBucketKMS-${self:service}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - kms:Encrypt
                  - kms:Decrypt
                  - kms:DescribeKey
                  - kms:ListKeys
                  - kms:GenerateDataKey
                Resource:
                  Fn::Join:
                    - ""
                    - - !Sub arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/
                      - !Sub "${ssm:/${sls:stage}/kms/key-id}"
        - PolicyName: ${sls:stage}-DatalakeIO-${self:service}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:ListObjects*
                  - s3:GetObject
                  - s3:CopyObject
                  - s3:DeleteObjects
                  - s3:DeleteObjectVersion
                  - s3:DeleteObject
                Resource:
                  - !Sub arn:aws:s3:::${sls:stage}-kmsbucket-${AWS::AccountId}
                  - !Sub arn:aws:s3:::${sls:stage}-kmsbucket-${AWS::AccountId}*
                  - !Sub arn:aws:s3:::${sls:stage}-datalake-bucket-${AWS::AccountId}
                  - !Sub arn:aws:s3:::${sls:stage}-datalake-bucket-${AWS::AccountId}*
  QuicksightUserCreationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ${sls:stage}-${self:service}-quicksight-usercreation-lambda-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: ${sls:stage}-Quicksight-${self:service}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - 'quicksight:ListGroups'
                  - 'quicksight:CreateGroup'
                  - 'quicksight:HeadObject'
                  - 'quicksight:ListUsers'
                  - 'quicksight:ListUserGroups'
                  - 'quicksight:DescribeUser'
                  - 'quicksight:RegisterUser'
                  - 'quicksight:CreateGroupMembership'
                Resource:
                  - "*"
        - PolicyName: ${sls:stage}-DatalakeIO-${self:service}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:ListObjects*
                  - s3:GetObject
                  - s3:CopyObject
                  - s3:DeleteObjects
                  - s3:DeleteObjectVersion
                  - s3:DeleteObject
                Resource:
                  - !Sub arn:aws:s3:::${sls:stage}-datalake-bucket-${AWS::AccountId}
                  - !Sub arn:aws:s3:::${sls:stage}-datalake-bucket-${AWS::AccountId}*
  ProcessLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ${sls:stage}-${self:service}-process-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaSQSQueueExecutionRole"
        - !ImportValue ${sls:stage}-process-lambda-topic-access-role
      Policies:
        - PolicyName: ${sls:stage}-Glue-${self:service}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - 'glue:GetTable'
                  - 'glue:GetDatabase'
                Resource:
                  - !Sub arn:aws:glue:${AWS::Region}:${AWS::AccountId}:catalog
                  - !Sub arn:aws:glue:${AWS::Region}:${AWS::AccountId}:database/${sls:stage}_${self:custom.editable.databaseName}_database
                  - !Sub arn:aws:glue:${AWS::Region}:${AWS::AccountId}:table/${sls:stage}_${self:custom.editable.databaseName}_database/*
        - PolicyName: ${sls:stage}-Athena-${self:service}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - 'athena:StartQueryExecution'
                  - 'athena:GetQueryExecution'
                  - 'athena:GetQueryResults'
                Resource:
                  !Sub arn:aws:athena:${AWS::Region}:${AWS::AccountId}:workgroup/primary
        - PolicyName: ${sls:stage}-DatalakeIO-${self:service}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:ListObjects*
                  - s3:GetObject
                  - s3:CopyObject
                  - s3:DeleteObjects
                  - s3:DeleteObjectVersion
                  - s3:DeleteObject
                Resource:
                  - !Sub arn:aws:s3:::${sls:stage}-kmsbucket-${AWS::AccountId}
                  - !Sub arn:aws:s3:::${sls:stage}-kmsbucket-${AWS::AccountId}*
        - PolicyName: ${sls:stage}-DatalakeBucket-${self:service}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:ListBucketVersions
                  - s3:GetBucketLocation
                Resource:
                  - !Sub arn:aws:s3:::${sls:stage}-kmsbucket-${AWS::AccountId}
                  - !Sub arn:aws:s3:::${sls:stage}-kmsbucket-${AWS::AccountId}*
        - PolicyName: ${sls:stage}-EncryptedBucketKMS-${self:service}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - kms:Encrypt
                  - kms:Decrypt
                  - kms:DescribeKey
                  - kms:ListKeys
                  - kms:GenerateDataKey
                Resource:
                  Fn::Join:
                    - ""
                    - - !Sub arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/
                      - !Sub "${ssm:/${sls:stage}/kms/key-id}"
        - PolicyName: ${sls:stage}-glue-${self:service}-role
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - glue:GetCrawler
                  - glue:UpdateCrawler
                Resource:
                  - !Sub arn:aws:glue:${AWS::Region}:${AWS::AccountId}:catalog
                  - !Sub arn:aws:glue:${AWS::Region}:${AWS::AccountId}:database/${sls:stage}_*
                  - !Sub arn:aws:glue:${AWS::Region}:${AWS::AccountId}:table/${sls:stage}_*
                  - !Sub arn:aws:glue:${AWS::Region}:${AWS::AccountId}:crawler/${sls:stage}_*
  RolebindingIngestionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ${sls:stage}-${self:service}-quicksight-ingestion-lambda-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: ${sls:stage}-Quicksight-${self:service}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - 'quicksight:CreateIngestion'
                Resource:
                  - "*"
  QuicksightIngestionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ${sls:stage}-${self:service}-rolebindings-ingestion-lambda-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: ${sls:stage}-Quicksight-${self:service}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - 'quicksight:CreateIngestion'
                Resource:
                  - "*"
  ConfigurationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ${sls:stage}-${self:service}-configuration-lambda-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: ${sls:stage}-start-ingestion-${self:service}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - 'lambda:InvokeFunction'
                Resource:
                  - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${sls:stage}-${self:service}-ingest
        - PolicyName: ${sls:stage}-start-crawler-${self:service}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - 'glue:StartCrawler'
                  - 'glue:GetCrawler'
                Resource:
                  - !Sub arn:aws:glue:${AWS::Region}:${AWS::AccountId}:crawler/DoraCrawlers
        - PolicyName: ${sls:stage}-athena-${self:service}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - 'athena:ListNamedQueries'
                  - 'athena:GetNamedQuery'
                  - 'athena:BatchGetNamedQuery'
                  - 'athena:StartQueryExecution'
                Resource:
                  - !Sub arn:aws:athena:${AWS::Region}:${AWS::AccountId}:workgroup/DoraWorkgroups
        - PolicyName: ${sls:stage}-s3-${self:service}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - 's3:GetBucketLocation'
                  - 's3:GetObject'
                  - 's3:ListBucket'
                  - 's3:ListBucketMultipartUploads'
                  - 's3:ListMultipartUploadParts'
                  - 's3:AbortMultipartUpload'
                  - 's3:PutObject'
                Resource:
                  - !Sub arn:aws:s3:::${sls:stage}-kmsbucket-${AWS::AccountId}/*
                  - !Sub arn:aws:s3:::${sls:stage}-kmsbucket-${AWS::AccountId}
                  - !Sub arn:aws:s3:::${sls:stage}-kmsbucket-${AWS::AccountId}/Athena-logs/
                  - !Sub arn:aws:s3:::${sls:stage}-kmsbucket-${AWS::AccountId}/Athena-logs/*
        - PolicyName: ${sls:stage}-EncryptedBucketKMS-${self:service}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - kms:Encrypt
                  - kms:Decrypt
                  - kms:DescribeKey
                  - kms:ListKeys
                  - kms:GenerateDataKey
                Resource:
                  Fn::Join:
                    - ""
                    - - !Sub arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/
                      - !Sub "${ssm:/${sls:stage}/kms/key-id}"
        - PolicyName: ${sls:stage}-Glue-${self:service}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - 'glue:GetPartitions'
                  - 'glue:GetTable'
                  - 'glue:GetDatabase'
                  - 'glue:GetDatabases'
                  - 'glue:CreateTable'
                Resource:
                  - !Sub arn:aws:glue:${AWS::Region}:${AWS::AccountId}:catalog
                  - !Sub arn:aws:glue:${AWS::Region}:${AWS::AccountId}:database/${sls:stage}_${self:custom.editable.databaseName}_database
                  - !Sub arn:aws:glue:${AWS::Region}:${AWS::AccountId}:table/${sls:stage}_${self:custom.editable.databaseName}_database/*
