service: events

custom:
  stage: ${opt:stage, self:provider.stage}

provider:
  name: aws
  stage: dev
  region: eu-central-1
  deploymentBucket:
    name: ${self:custom.stage}-dataplattform-v2-deploymentbucket

resources:
  Resources:
    NewReportTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: NewReport
        TopicName: ${self:custom.stage}-NewReport

    DataUpdateTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: DataUpdated
        TopicName: ${self:custom.stage}-DataUpdate

    DeleteReportTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: DeleteReport
        TopicName: ${self:custom.stage}-DeleteReport

    AlarmTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: CloudwatchAlarms
        TopicName: ${self:custom.stage}-CloudwatchAlarms

    TopicPolicy:
      Type: AWS::SNS::TopicPolicy
      Properties:
        PolicyDocument:
          Id: ${self:custom.stage}-SystemTopicPolicy
          Version: "2012-10-17"
          Statement:
            - Sid: ${self:custom.stage}-LambdaTopicAccess
              Effect: Allow
              Principal:
                Service: lambda.amazonaws.com
              Action:
                - sns:Publish
                - sns:Subscribe
                - sns:Receive
              Resource: "*"
              Condition:
                StringEquals:
                  AWS:SourceAccount: !Ref "AWS::AccountId"
            - Sid: ${self:custom.stage}-CloudwatchTopicAccess
              Effect: Allow
              Principal:
                Service: cloudwatch.amazonaws.com
              Action:
                - sns:Publish
              Resource: "*"
              Condition:
                StringEquals:
                  AWS:SourceOwner: !Ref AWS::AccountId

        Topics:
          - !Ref NewReportTopic
          - !Ref DataUpdateTopic
          - !Ref DeleteReportTopic
          - !Ref AlarmTopic

    ProcessTopicPolicy:
      Type: AWS::IAM::ManagedPolicy
      Properties:
        ManagedPolicyName: ${self:custom.stage}-lambda-topic-access-role
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - sns:Publish
              Resource: !Ref DataUpdateTopic

  Outputs:
    NewReportTopicOutput:
      Value:
        Ref: NewReportTopic
      Export:
        Name: ${self:custom.stage}-new-report-topic-arn

    DataUpdateTopicOutput:
      Value:
        Ref: DataUpdateTopic
      Export:
        Name: ${self:custom.stage}-data-update-topic-arn

    DeleteReportTopicOutput:
      Value:
        Ref: DeleteReportTopic
      Export:
        Name: ${self:custom.stage}-delete-report-topic-arn

    AlarmTopicOutput:
      Value:
        Ref: AlarmTopic
      Export:
        Name: ${self:custom.stage}-alarm-topic-arn

    LambdaTopicAccessOutput:
      Value:
        Ref: ProcessTopicPolicy
      Export:
        Name: ${self:custom.stage}-process-lambda-topic-access-role
