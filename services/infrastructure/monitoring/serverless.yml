service: monitoring
frameworkVersion: '3'

dataplattform:
  dependencies:
    - ../deploymentBucket
    - ../events

custom:
  service: ${sls:stage}-${self:service}
  datalakeName: !Sub '${sls:stage}-datalake-bucket-${AWS::AccountId}'

provider:
  name: aws
  stage: dev
  region: eu-central-1
  stackName: ${self:custom.service}
  deploymentBucket:
    name: ${sls:stage}-${file(../deploymentBucket/config.yml):bucketName, file(../deploymentBucket/serverless.yml):defaultBucketName}
  runtime: nodejs16.x

resources:
  Resources:
    LambdaDashboard:
      Type: AWS::CloudWatch::Dashboard
      Properties:
        DashboardName: ${sls:stage}-lambda-dashboard
        DashboardBody:
          '{
            "widgets": [
              {
                "type": "metric",
                "x": 12,
                "y": 16,
                "width": 12,
                "height": 6,
                "properties": {
                  "metrics": [
                    [
                      {
                        "expression": "SEARCH(` {AWS/Lambda,FunctionName} MetricName=\"Invocations\" AND \${sls:stage} AND process `, `Sum`, 300 )",
                        "label": "All ProcessInvocations",
                        "id": "p",
                        "region": "\${self:provider.region}",
                        "visible": false
                      }
                    ],
                    [
                      {
                        "expression": "SEARCH(` {AWS/Lambda,FunctionName} MetricName=\"Errors\" AND \${sls:stage} AND process`, `Sum`, 300)",
                        "label": "",
                        "id": "er",
                        "region": "\${self:provider.region}"
                      }
                    ]
                  ],
                  "view": "timeSeries",
                  "stacked": false,
                  "region": "\${self:provider.region}",
                  "stat": "Sum",
                  "period": 300,
                  "legend": {
                    "position": "hidden"
                  },
                  "title": "Errors",
                  "liveData": true,
                  "yAxis": {
                    "left": {
                      "showUnits": false,
                      "min": 0
                    },
                    "right": {
                      "showUnits": false
                    }
                  }
                }
              },
              {
                "type": "metric",
                "x": 0,
                "y": 0,
                "width": 12,
                "height": 3,
                "properties": {
                  "metrics": [
                    [
                      {
                        "expression": "SEARCH(`{AWS/SQS,QueueName}MetricName=\"NumberOfMessagesReceived\" AND \${sls:stage} AND NOT dl `, `Sum`,3600)",
                        "label": "AllQueues",
                        "id": "q",
                        "visible": false,
                        "region": "\${self:provider.region}"
                      }
                    ],
                    [
                      {
                        "expression": "SEARCH(`{AWS/SQS,QueueName}MetricName=\"NumberOfMessagesReceived\" AND \${sls:stage} AND dl `, `Sum`,3600)",
                        "label": "All DeadLetters",
                        "id": "dl",
                        "visible": false,
                        "region": "\${self:provider.region}"
                      }
                    ],
                    [
                      {
                        "expression": "SUM(q)",
                        "label": "MessagesReceived",
                        "id": "e1",
                        "region": "\${self:provider.region}"
                      }
                    ],
                    [
                      {
                        "expression": "SUM(dl)",
                        "label": "MessagesReceived in DL",
                        "id": "e2",
                        "region": "\${self:provider.region}"
                      }
                    ]
                  ],
                  "view": "singleValue",
                  "region": "\${self:provider.region}",
                  "stat": "Sum",
                  "period": 3600,
                  "title": "SQS",
                  "setPeriodToTimeRange": true
                }
              },
              {
                "type": "metric",
                "x": 0,
                "y": 16,
                "width": 12,
                "height": 6,
                "properties": {
                  "metrics": [
                    [
                      {
                        "expression": "SEARCH(` {AWS/Lambda,FunctionName} MetricName=\"Invocations\" AND \${sls:stage} AND ingest `, `Sum`, 300)",
                        "label": "",
                        "id": "i",
                        "region": "\${self:provider.region}",
                        "yAxis": "left",
                        "visible": false
                      }
                    ],
                    [
                      {
                        "expression": "SEARCH(` {AWS/Lambda,FunctionName} MetricName=\"Errors\" AND \${sls:stage} AND ingest`, `Sum`, 300)",
                        "label": "",
                        "id": "er",
                        "region": "\${self:provider.region}",
                        "yAxis": "left"
                      }
                    ]
                  ],
                  "view": "timeSeries",
                  "stacked": false,
                  "region": "\${self:provider.region}",
                  "stat": "Sum",
                  "period": 300,
                  "legend": {
                    "position": "hidden"
                  },
                  "title": "Errors",
                  "setPeriodToTimeRange": true,
                  "liveData": true,
                  "yAxis": {
                    "left": {
                      "showUnits": false,
                      "min": 0
                    },
                    "right": {
                      "showUnits": false
                    }
                  }
                }
              },
              {
                "type": "metric",
                "x": 12,
                "y": 0,
                "width": 12,
                "height": 3,
                "properties": {
                  "metrics": [
                    [
                      "AWS/S3",
                      "BucketSizeBytes",
                      "StorageType",
                      "StandardStorage",
                      "BucketName",
                      "\${self:custom.datalakeName}",
                      {
                        "label": "Average Size"
                      }
                    ],
                    [
                      ".",
                      "NumberOfObjects",
                      ".",
                      "AllStorageTypes",
                      ".",
                      ".",
                      {
                        "label": "Average NumberofObjects"
                      }
                    ]
                  ],
                  "view": "singleValue",
                  "region": "\${self:provider.region}",
                  "stat": "Average",
                  "period": 604800,
                  "stacked": false,
                  "setPeriodToTimeRange": false,
                  "title": "Datalake - Requires Period>1d"
                }
              },
              {
                "type": "metric",
                "x": 0,
                "y": 4,
                "width": 12,
                "height": 6,
                "properties": {
                  "metrics": [
                    [
                      {
                        "expression": "SUM(er)",
                        "label": "IngestErrors",
                        "id": "e1",
                        "region": "\${self:provider.region}"
                      }
                    ],
                    [
                      {
                        "expression": "SUM(i) - SUM(er)",
                        "label": "IngestSuccesses",
                        "id": "e2",
                        "region": "\${self:provider.region}"
                      }
                    ],
                    [
                      {
                        "expression": "SEARCH(` {AWS/Lambda,FunctionName} MetricName=\"Invocations\" AND \${sls:stage} AND ingest `, `Sum`, 300 )",
                        "label": "All IngestInvocations",
                        "id": "i",
                        "visible": false,
                        "region": "\${self:provider.region}"
                      }
                    ],
                    [
                      {
                        "expression": "SEARCH(` {AWS/Lambda,FunctionName} MetricName=\"Errors\" AND \${sls:stage} AND ingest`, `Sum`, 300 )",
                        "label": "All IngestErrors",
                        "id": "er",
                        "visible": false,
                        "region": "\${self:provider.region}"
                      }
                    ]
                  ],
                  "view": "timeSeries",
                  "stacked": true,
                  "region": "\${self:provider.region}",
                  "stat": "Sum",
                  "period": 300,
                  "legend": {
                    "position": "bottom"
                  },
                  "title": "Aggregated",
                  "liveData": true,
                  "yAxis": {
                    "left": {
                      "showUnits": false,
                      "min": 0
                    },
                    "right": {
                      "showUnits": false
                    }
                  }
                }
              },
              {
                "type": "metric",
                "x": 0,
                "y": 10,
                "width": 12,
                "height": 6,
                "properties": {
                  "metrics": [
                    [
                      {
                        "expression": "SEARCH(` {AWS/Lambda,FunctionName} MetricName=\"Invocations\" AND \${sls:stage} AND ingest `, `Sum`, 300)",
                        "label": "",
                        "id": "i",
                        "region": "\${self:provider.region}",
                        "yAxis": "left"
                      }
                    ],
                    [
                      {
                        "expression": "SEARCH(` {AWS/Lambda,FunctionName} MetricName=\"Errors\" AND \${sls:stage} AND ingest`, `Sum`, 300 )",
                        "label": "All IngestErrors",
                        "id": "er",
                        "region": "\${self:provider.region}",
                        "yAxis": "left",
                        "visible": false
                      }
                    ]
                  ],
                  "view": "timeSeries",
                  "stacked": false,
                  "region": "\${self:provider.region}",
                  "stat": "Sum",
                  "period": 300,
                  "legend": {
                    "position": "hidden"
                  },
                  "title": "Invocations",
                  "setPeriodToTimeRange": true,
                  "liveData": true,
                  "yAxis": {
                    "left": {
                      "showUnits": false,
                      "min": 0
                    },
                    "right": {
                      "showUnits": false
                    }
                  }
                }
              },
              {
                "type": "metric",
                "x": 12,
                "y": 4,
                "width": 12,
                "height": 6,
                "properties": {
                  "metrics": [
                    [
                      {
                        "expression": "SUM(er)",
                        "label": "ProcessErrors",
                        "id": "e1",
                        "region": "\${self:provider.region}"
                      }
                    ],
                    [
                      {
                        "expression": "SUM(p) - SUM(er)",
                        "label": "ProcessSuccesses",
                        "id": "e2",
                        "region": "\${self:provider.region}"
                      }
                    ],
                    [
                      {
                        "expression": "SEARCH(` {AWS/Lambda,FunctionName} MetricName=\"Invocations\" AND \${sls:stage} AND process `, `Sum`, 300 )",
                        "label": "All ProcessInvocations",
                        "id": "p",
                        "visible": false,
                        "region": "\${self:provider.region}"
                      }
                    ],
                    [
                      {
                        "expression": "SEARCH(` {AWS/Lambda,FunctionName} MetricName=\"Errors\" AND \${sls:stage} AND process`, `Sum`, 300 )",
                        "label": "All ProcessErrors",
                        "id": "er",
                        "visible": false,
                        "region": "\${self:provider.region}"
                      }
                    ]
                  ],
                  "view": "timeSeries",
                  "stacked": true,
                  "region": "\${self:provider.region}",
                  "stat": "Sum",
                  "period": 300,
                  "legend": {
                    "position": "bottom"
                  },
                  "title": "Aggregated",
                  "liveData": true,
                  "yAxis": {
                    "left": {
                      "showUnits": false,
                      "min": 0
                    },
                    "right": {
                      "showUnits": false
                    }
                  }
                }
              },
              {
                "type": "metric",
                "x": 12,
                "y": 10,
                "width": 12,
                "height": 6,
                "properties": {
                  "metrics": [
                    [
                      {
                        "expression": "SEARCH(` {AWS/Lambda,FunctionName} MetricName=\"Invocations\" AND \${sls:stage} AND process `, `Sum`, 300)",
                        "label": "",
                        "id": "p",
                        "region": "\${self:provider.region}"
                      }
                    ],
                    [
                      {
                        "expression": "SEARCH(` {AWS/Lambda,FunctionName} MetricName=\"Errors\" AND \${sls:stage} AND process`, `Sum`, 300 )",
                        "label": "All ProcessErrors",
                        "id": "er",
                        "visible": false,
                        "region": "\${self:provider.region}"
                      }
                    ]
                  ],
                  "view": "timeSeries",
                  "stacked": false,
                  "region": "\${self:provider.region}",
                  "stat": "Sum",
                  "period": 300,
                  "legend": {
                    "position": "hidden"
                  },
                  "title": "Invocations",
                  "liveData": true,
                  "yAxis": {
                    "left": {
                      "showUnits": false,
                      "min": 0
                    },
                    "right": {
                      "showUnits": false
                    }
                  }
                }
              },
              {
                "type": "text",
                "x": 12,
                "y": 3,
                "width": 12,
                "height": 1,
                "properties": {
                  "markdown": "# Processing"
                }
              },
              {
                "type": "text",
                "x": 0,
                "y": 3,
                "width": 12,
                "height": 1,
                "properties": {
                  "markdown": "# Ingestion"
                }
              },
              {
                "type": "metric",
                "x": 0,
                "y": 22,
                "width": 12,
                "height": 6,
                "properties": {
                  "metrics": [
                    [
                      {
                        "expression": "SEARCH(` {AWS/Lambda, FunctionName } MetricName=\"Duration\" AND \${sls:stage} AND ingest`, `Sum`, 300 )",
                        "label": "Expression1",
                        "id": "e1",
                        "region": "\${self:provider.region}"
                      }
                    ]
                  ],
                  "view": "timeSeries",
                  "stacked": false,
                  "region": "\${self:provider.region}",
                  "stat": "Average",
                  "period": 300,
                  "legend": {
                    "position": "hidden"
                  },
                  "liveData": true,
                  "yAxis": {
                    "left": {
                      "showUnits": false
                    },
                    "right": {
                      "showUnits": false
                    }
                  },
                  "title": "Duration"
                }
              },
              {
                "type": "metric",
                "x": 12,
                "y": 22,
                "width": 12,
                "height": 6,
                "properties": {
                  "metrics": [
                    [
                      {
                        "expression": "SEARCH(` {AWS/Lambda, FunctionName } MetricName=\"Duration\" AND \${sls:stage} AND process`, `Sum`, 300 )",
                        "label": "Duration",
                        "id": "e1",
                        "region": "\${self:provider.region}"
                      }
                    ]
                  ],
                  "view": "timeSeries",
                  "stacked": false,
                  "region": "\${self:provider.region}",
                  "stat": "Average",
                  "period": 300,
                  "legend": {
                    "position": "hidden"
                  },
                  "liveData": true,
                  "yAxis": {
                    "left": {
                      "showUnits": false
                    },
                    "right": {
                      "showUnits": false
                    }
                  },
                  "title": "Duration"
                }
              }
            ]
          }'

    DataApiDashboard:
      Type: AWS::CloudWatch::Dashboard
      Properties:
        DashboardName: ${sls:stage}-dataAPI-dashboard
        DashboardBody:
          '{
            "widgets": [
              {
                "type": "metric",
                "x": 0,
                "y": 0,
                "width": 18,
                "height": 6,
                "properties": {
                  "metrics": [
                    [
                      "AWS/ApiGateway",
                      "Count",
                      "ApiName",
                      "\${sls:stage}-DataAPI"
                    ],
                    [
                      ".",
                      "5XXError",
                      ".",
                      "."
                    ],
                    [
                      ".",
                      "4XXError",
                      ".",
                      "."
                    ]
                  ],
                  "view": "timeSeries",
                  "stacked": false,
                  "region": "\${self:provider.region}",
                  "stat": "Sum",
                  "period": 300,
                  "liveData": true
                }
              },
              {
                "type": "metric",
                "x": 18,
                "y": 0,
                "width": 6,
                "height": 6,
                "properties": {
                  "metrics": [
                    [
                      "AWS/ApiGateway",
                      "Count",
                      "ApiName",
                      "\${sls:stage}-DataAPI"
                    ],
                    [
                      ".",
                      "5XXError",
                      ".",
                      "."
                    ],
                    [
                      ".",
                      "4XXError",
                      ".",
                      "."
                    ]
                  ],
                  "view": "singleValue",
                  "region": "\${self:provider.region}",
                  "stat": "Sum",
                  "period": 3600,
                  "title": "Requests",
                  "setPeriodToTimeRange": true,
                  "liveData": true
                }
              },
              {
                "type": "log",
                "x": 0,
                "y": 6,
                "width": 24,
                "height": 12,
                "properties": {
                  "query": "SOURCE `/aws/api-gateway/DataAPI-\${sls:stage}` | fields @timestamp, @message\n| sort @timestamp desc\n| limit 100\n| filter @message not like \"200\"",
                  "region": "\${self:provider.region}",
                  "stacked": false,
                  "title": "Non 200 Logs",
                  "view": "table"
                }
              },
              {
               "type": "log",
               "x": 0,
               "y": 6,
               "width": 24,
               "height": 12,
               "properties": {
                 "query": "SOURCE `/aws/api-gateway/DataAPI-\${sls:stage}` | fields @timestamp, @message\n| parse @message \"sub: *,\" as @userId\n| stats count_distinct(@userId) by bin(5m)",
                 "region": "\${self:provider.region}",
                 "stacked": false,
                 "title": "Number of unique users",
                 "view": "table"
                }
              },
              {
                 "type": "log",
                 "x": 0,
                 "y": 6,
                 "width": 24,
                 "height": 12,
                 "properties": {
                   "query": "SOURCE `/aws/api-gateway/DataAPI-\${sls:stage}` | fields @timestamp, @message \n| parse @message \"sub: *,\" as @userId\n| stats count(*) by @userId",
                   "region": "\${self:provider.region}",
                   "stacked": false,
                   "title": "Number of request per user",
                   "view": "table"
                }
              }
            ]
          }'

    LambdaAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmActions:
          - !ImportValue ${sls:stage}-alarm-topic-arn
        InsufficientDataActions:
          - !ImportValue ${sls:stage}-alarm-topic-arn
        OKActions:
          - !ImportValue ${sls:stage}-alarm-topic-arn
        AlarmName: ${sls:stage}-lambda-error-alarm
        AlarmDescription: Goes into ALARM when there are errors in lambda
        ComparisonOperator: GreaterThanThreshold
        DatapointsToAlarm: 1
        EvaluationPeriods: 1
        Namespace: AWS/Lambda
        MetricName: Errors
        Period: 300
        Statistic: Sum
        Threshold: 0.0
        TreatMissingData: notBreaching

    LambdaXRayTracing:
      Type: AWS::IAM::ManagedPolicy
      Properties:
        Description: "Gives lambdas permission to perform XRay tracing"
        ManagedPolicyName: ${sls:stage}-lambda-xray-tracing-policy
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - xray:PutTraceSegments
                - xray:PutTelemetryRecords
              Resource:
                - "*"

  Outputs:
    LambdaXRayTracingAccessOutput:
      Value:
        Ref: LambdaXRayTracing
      Export:
        Name: ${sls:stage}-lambda-xray-tracing
