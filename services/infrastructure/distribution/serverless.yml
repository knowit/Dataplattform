service: cloudfront-api-dist

custom:
  stage: ${opt:stage, self:provider.stage}
  allowedMethods:
    - GET
    - HEAD
    - OPTIONS
    - PUT
    - PATCH
    - POST
    - DELETE
  forwardedHeaders:
    - Accept
    - Content-Type
    - Access-Control-Request-Headers
    - Access-Control-Request-Method
    - Origin
    - Authorization

provider:
  name: aws
  stage: dev
  region: eu-central-1
  deploymentBucket:
    name: ${self:custom.stage}-dataplattform-v2-deploymentbucket

resources:
  Resources:
    APIDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Enabled: true
          Aliases:
            - ${self:custom.stage}-api.dataplattform.knowit.no
          Origins:
            - DomainName: 8z9couwu46.execute-api.eu-central-1.amazonaws.com # TODO: ref
              OriginPath: /${self:custom.stage}
              Id: ${self:custom.stage}-data-api-origin
              CustomOriginConfig:
                HTTPSPort: 443
                OriginProtocolPolicy: https-only
                OriginSSLProtocols:
                  - TLSv1.2

          DefaultCacheBehavior:
            TargetOriginId: ${self:custom.stage}-data-api-origin
            ForwardedValues:
              QueryString: true
              Headers: ${self:custom.forwardedHeaders}
            ViewerProtocolPolicy: redirect-to-https
            AllowedMethods: ${self:custom.allowedMethods}

          PriceClass: PriceClass_100
          ViewerCertificate:
            AcmCertificateArn: 
              Fn::Join: 
                - ':'
                - - 'arn:aws:acm:us-east-1'
                  - !Ref 'AWS::AccountId'
                  - certificate/fa79680b-dab9-4245-aaf0-a5ffeb15b5e9
            MinimumProtocolVersion: TLSv1.2_2019
            SslSupportMethod: sni-only

  Outputs:
    APIDistributionOutput:
      Value:
        'Fn::GetAtt': [APIDistribution, DomainName]