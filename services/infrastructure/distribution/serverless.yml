service: cloudfront-api-dist
frameworkVersion: '3'

dataplattform:
  dependencies:
    - ../deploymentBucket
    - ../../api/dataApi
    - ../routes

custom:
  allowedMethods:
    - GET
    - HEAD
    - OPTIONS
    - PUT
    - PATCH
    - POST
    - DELETE
  forwardedHeaders:
    - Accept
    - Content-Type
    - Access-Control-Request-Headers
    - Access-Control-Request-Method
    - Origin
    - Authorization
  distributionAlias: api.${ssm:/${sls:stage}/routes/domain_name}
  certificate: ${ssm:/${sls:stage}/USEA1/sslIdentifier}
  originDomain: !ImportValue ${sls:stage}-DataAPI-Gateway-url

provider:
  name: aws
  stage: dev
  region: eu-central-1
  stackName: ${self:service}-${sls:stage}
  deploymentBucket:
    name: ${sls:stage}-${file(../deploymentBucket/config.yml):bucketName, file(../deploymentBucket/serverless.yml):defaultBucketName}
  runtime: nodejs16.x

resources:
  Resources:
    APIDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Enabled: true
          Aliases:
            - ${self:custom.distributionAlias}
          Origins:
            - DomainName: ${self:custom.originDomain}

              OriginPath: /${sls:stage}
              Id: ${sls:stage}-data-api-origin
              CustomOriginConfig:
                HTTPSPort: 443
                OriginProtocolPolicy: https-only
                OriginSSLProtocols:
                  - TLSv1.2

          DefaultCacheBehavior:
            TargetOriginId: ${sls:stage}-data-api-origin
            ForwardedValues:
              QueryString: true
              Headers: ${self:custom.forwardedHeaders}
            ViewerProtocolPolicy: redirect-to-https
            AllowedMethods: ${self:custom.allowedMethods}

          PriceClass: PriceClass_100
          ViewerCertificate:
            AcmCertificateArn:
              Fn::Join:
                - ":"
                - - "arn:aws:acm:us-east-1"
                  - !Ref "AWS::AccountId"
                  - ${self:custom.certificate}
            MinimumProtocolVersion: TLSv1.2_2019
            SslSupportMethod: sni-only

    apiDNSRecord:
      Type: AWS::Route53::RecordSetGroup
      Properties:
        HostedZoneId: !ImportValue ${sls:stage}-routes-zoneid
        RecordSets:
          - Name: api.${ssm:/${sls:stage}/routes/domain_name}
            Type: A
            AliasTarget:
              DNSName:
                "Fn::GetAtt": [APIDistribution, DomainName]
              HostedZoneId: Z2FDTNDATAQYW2

  Outputs:
    APIDistributionOutput:
      Value:
        "Fn::GetAtt": [APIDistribution, DomainName]
