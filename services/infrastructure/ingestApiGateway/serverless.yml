service: ingestApiGateway
frameworkVersion: '3'

dataplattform:
  dependencies:
    - ../deploymentBucket
    - ../routes

custom:
  project: dataplattform-${sls:stage}

provider:
  name: aws
  stage: dev
  region: eu-central-1
  stackName: ${sls:stage}-${self:service}
  deploymentBucket:
    name: ${sls:stage}-${file(../deploymentBucket/config.yml):bucketName, file(../deploymentBucket/serverless.yml):defaultBucketName}
  runtime: python3.9

  tags:
    project: dataplattform
    layer: ingestion
    ingestion: webHooks
  stackTags:
    project: dataplattform
    layer: ingestion
    ingestion: webHooks

resources:
  Resources:
    ingestApiGateway:
      Type: AWS::ApiGateway::RestApi
      Properties:
        Name: ${sls:stage}-ingestApiGateway
        Description: main input api gateway
    ingestDNSRecord:
      Type: AWS::Route53::RecordSetGroup
      Properties:
        HostedZoneId: !ImportValue ${sls:stage}-routes-zoneid
        RecordSets:
          - Name: ingest.${ssm:/${sls:stage}/routes/domain_name}
            Type: A
            AliasTarget:
              DNSName:
                Fn::Join:
                  - "."
                  - - Ref: ingestApiGateway
                    - "execute-api.eu-central-1.amazonaws.com."
              HostedZoneId: Z1U9ULNL0V5AJ3

  Outputs:
    apiGatewayRestApiId:
      Value:
        Ref: ingestApiGateway
      Export:
        Name: ${sls:stage}-ingestApiGateway-restApiId

    apiGatewayRestApiRootResourceId:
      Value:
        Fn::GetAtt:
          - ingestApiGateway
          - RootResourceId
      Export:
        Name: ${sls:stage}-ingestApiGateway-rootResourceId
