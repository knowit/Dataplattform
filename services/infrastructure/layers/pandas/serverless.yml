service: pandasDepLayer

dataplattform:
  dependencies:
    - ../../deploymentBucket

custom:
  stage: ${opt:stage, self:provider.stage}
  project: dataplattform-${self:custom.stage}
  scripts:
    hooks:
      before:package:cleanup: echo Cleaning requirements cache... && sls requirements clean && sls requirements cleanCache
  pythonRequirements:
    dockerizePip: non-linux
    slim: true
    layer:
      name: ${self:custom.stage}-${self:service}
      description: Python requirements lambda layer for Pandas
      compatibleRuntimes:
        - python3.7
    pipCmdExtraArgs:
      - --no-deps

provider:
  name: aws
  stage: dev
  region: eu-central-1
  stackName: ${self:custom.stage}-${self:service}
  deploymentBucket:
    name: ${self:custom.stage}-${file(../../deploymentBucket/config.yml):bucketName, file(../../deploymentBucket/serverless.yml):defaultBucketName}
  runtime: python3.7
  tags:
    project: dataplattform
    layer: infrastructure
  stackTags:
    project: dataplattform
    layer: infrastructure


resources:
  Outputs:
    LayerArn:
      Value: {Ref: PythonRequirementsLambdaLayer}
      Export:
        Name: ${self:custom.stage}-${self:service}-arn


plugins:
  - serverless-python-requirements
  - serverless-plugin-scripts
