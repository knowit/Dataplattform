service: datalake

custom:
  project: dataplattform
  stage: ${opt:stage, self:provider.stage}
  profile:
    prod: dataplattform-prod
    dev: dataplattform-dev
  service: ${self:custom.stage}-${self:service}
  level3StagingDir: data/level-3/athena-stage/
  level2StagingDir: data/level-2/athena-stage/
  level1StagingDir: data/level-1/athena-stage/
  level3ReportDir: reports/level-3/
  level2ReportDir: reports/level-2/
  level1ReportDir: reports/level-1/
  

provider:
  name: aws
  profile: ${self:custom.profile.${self:custom.stage}}
  stage: dev
  region: eu-central-1
  stackName: ${self:custom.service}
  deploymentBucket: #provide a bucket name to where serverless assets should to be uploaded
    name: ${self:custom.stage}-dataplattform-v2-deploymentbucket

  tags:
    project: dataplattform
    layer: infrastructure
  stackTags: #sets CloudFormation stack tags
    project: dataplattform
    layer: infrastructure

resources:
  Resources: 
    LogBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.service}-log-bucket
        VersioningConfiguration:
          Status: Enabled #keeps different versions of object if overwrited/updated
        AccessControl:
          LogDeliveryWrite

    DataLake:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.service}-datalake
        VersioningConfiguration:
          Status: Enabled #keeps different versions of object if overwrited/updated
        PublicAccessBlockConfiguration: #blocks any public access to s3 bucket
          BlockPublicAcls: True
          BlockPublicPolicy: True
          IgnorePublicAcls: True
          RestrictPublicBuckets: True
        BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: AES256
        LifecycleConfiguration:
          Rules:
            - ExpirationInDays: 1
              NoncurrentVersionExpirationInDays: 1
              Prefix: ${self:custom.level3StagingDir}
              Status: Enabled
            - ExpirationInDays: 1
              NoncurrentVersionExpirationInDays: 1
              Prefix: ${self:custom.level2StagingDir}
              Status: Enabled
            - ExpirationInDays: 1
              NoncurrentVersionExpirationInDays: 1
              Prefix: ${self:custom.level1StagingDir}
              Status: Enabled
            - NoncurrentVersionExpirationInDays: 1
              Prefix: ${self:custom.level3ReportDir}
              Status: Enabled
            - NoncurrentVersionExpirationInDays: 1
              Prefix: ${self:custom.level2ReportDir}
              Status: Enabled
            - NoncurrentVersionExpirationInDays: 1
              Prefix: ${self:custom.level1ReportDir}
              Status: Enabled
        
        LoggingConfiguration:
          DestinationBucketName: ${self:resources.Resources.LogBucket.Properties.BucketName}
          LogFilePrefix: ${self:resources.Resources.LogBucket.Properties.BucketName}

  #Arn of S3 bucket needs to be exported in order to use it from other services (ingestion and processing)
  Outputs:
    DataLakeArn:
      Value: !GetAtt DataLake.Arn
      Export:
        Name: ${self:custom.stage}-datalakeArn
    DataLakeName:
      Value: ${self:resources.Resources.DataLake.Properties.BucketName}
      Export:
        Name: ${self:custom.stage}-datalakeName
    DefaultLevel3StagingDir:
      Value: ${self:custom.level3StagingDir}
      Export:
        Name: ${self:custom.stage}-default-level-3-staging-dir
    DefaultLevel2StagingDir:
      Value: ${self:custom.level2StagingDir}
      Export:
        Name: ${self:custom.stage}-default-level-2-staging-dir
    DefaultLevel1StagingDir:
      Value: ${self:custom.level1StagingDir}
      Export:
        Name: ${self:custom.stage}-default-level-1-staging-dir
    LogBucketName:
      Value: ${self:resources.Resources.LogBucket.Properties.BucketName}
      Export:
        Name: ${self:custom.stage}-logBucketName